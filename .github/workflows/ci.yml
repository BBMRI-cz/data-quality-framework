name: CI/CD Pipeline
on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master
jobs:
  lint:
    name: Check Code Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('modules/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - working-directory: modules/backend
        run: mvn --quiet clean com.spotify.fmt:fmt-maven-plugin:check
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('modules/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - working-directory: modules/backend
        run: mvn --quiet test
  migration:
    name: Test DB Migration
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - run: docker compose up -d
        name: Spin up latest stable image

      - run: docker build -t ghcr.io/bbmri-cz/data-quality-agent:latest .
        name: Build new image

      - run: docker compose down
        name: Down the container

      - run: docker compose up -d
        name: Spin up new image

      - name: Check container health
        run: |
          for i in {1..10}; do
          STATUS=$(docker inspect --format='{{.State.Health.Status}}' $(docker-compose ps -q quality-agent))
          echo "Health status: $STATUS"
          if [ "$STATUS" == "healthy" ]; then
          echo "Container is healthy"
          exit 0
          fi
          sleep 3
          done
          echo "Container is not healthy"
          docker-compose logs
          exit 1

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - test
      - migration
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('modules/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - working-directory: modules/backend
        run: mvn --quiet clean package -DskipTests

      - uses: docker/setup-buildx-action@v3

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/data-quality-agent
          tags: |
            type=sha
            type=raw,value=${{ github.head_ref }},event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ARTIFACT_VERSION=${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max