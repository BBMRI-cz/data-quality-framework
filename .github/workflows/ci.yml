name: CI/CD Pipeline
on:

  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    tags:
      - 'v*.*.*'
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('modules/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - working-directory: modules/backend
        run: mvn --quiet clean com.spotify.fmt:fmt-maven-plugin:check
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('modules/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - working-directory: modules/backend
        run: mvn --quiet test
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('modules/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - working-directory: modules/backend
        run: mvn --quiet clean package -DskipTests
      - uses: docker/setup-buildx-action@v3
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/data-quality-agent
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.ref_name }},enable={{is_default_branch}}
      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ARTIFACT_VERSION=${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max